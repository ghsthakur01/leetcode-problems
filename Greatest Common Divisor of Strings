#include <stdio.h>
#include <string.h>
#include <stdlib.h>

// Function to compute the Greatest Common Divisor (GCD) of two numbers
int gcd(int a, int b) {
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }
    return a;
}

// Function to check if two concatenated versions are equal
int isValidGCDString(char *str1, char *str2) {
    int len1 = strlen(str1);
    int len2 = strlen(str2);
    
    // Allocate memory for concatenated strings
    char *concat1 = (char *)malloc(len1 + len2 + 1);
    char *concat2 = (char *)malloc(len1 + len2 + 1);
    
    // Concatenate in both orders
    strcpy(concat1, str1);
    strcat(concat1, str2);
    
    strcpy(concat2, str2);
    strcat(concat2, str1);
    
    // Compare both concatenations
    int isEqual = strcmp(concat1, concat2) == 0;
    
    // Free allocated memory
    free(concat1);
    free(concat2);
    
    return isEqual;
}

// Function to find the greatest common divisor of two strings
char* gcdOfStrings(char* str1, char* str2) {
    int len1 = strlen(str1);
    int len2 = strlen(str2);

    // If str1 + str2 is not the same as str2 + str1, return ""
    if (!isValidGCDString(str1, str2)) {
        return "";
    }

    // Find the GCD of string lengths
    int gcdLen = gcd(len1, len2);

    // Allocate memory for result and copy the substring
    char* result = (char*)malloc(gcdLen + 1);
    strncpy(result, str1, gcdLen);
    result[gcdLen] = '\0';  // Null terminate the string

    return result;
}
